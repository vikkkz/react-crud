{"version":3,"sources":["components/read.js","components/update.js","components/create.js","App.js","index.js"],"names":["Read","useState","APIData","setAPIData","useEffect","axios","get","then","response","data","getData","Table","singleLine","Header","Row","HeaderCell","Body","map","Cell","firstName","lastName","checkbox","to","Button","onClick","id","localStorage","setItem","setData","delete","Update","setID","getItem","setFirstName","setLastName","setCheckbox","navigate","useNavigate","Form","className","Field","placeholder","value","onChange","e","target","Checkbox","label","checked","put","type","Create","post","App","history","exact","path","element","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.8cf06bba.chunk.js","sourcesContent":["import React, { useState ,  useEffect  } from 'react';\r\nimport { Button, Table } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Read = ()=>{\r\n  const [APIData, setAPIData] = useState([]);\r\n  const setData = (data) => {\r\n    let { id, firstName, lastName, checkbox } = data;\r\n    localStorage.setItem('ID', id);\r\n    localStorage.setItem('First Name', firstName);\r\n    localStorage.setItem('Last Name', lastName);\r\n    localStorage.setItem('Checkbox Value', checkbox)\r\n }\r\nuseEffect(() => {\r\n  axios.get(`https://6309eeb332499100327ddb99.mockapi.io/mydata`)\r\n  .then((response) => {\r\n      setAPIData(response.data);\r\n  }) \r\n}, [])\r\nconst onDelete = (id) => {\r\n  axios.delete(`https://6309eeb332499100327ddb99.mockapi.io/mydata/${id}`)\r\n  .then(() =>{\r\n    getData()\r\n  })\r\n}\r\n\r\nconst getData = () => {\r\n  axios.get(`https://60fbca4591156a0017b4c8a7.mockapi.io/fakeData`)\r\n      .then((getData) => {\r\n           setAPIData(getData.data);\r\n       })\r\n}\r\n  return(\r\n    <>\r\n  \r\n            <div>\r\n                <Table singleLine>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>First Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Last Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Checked</Table.HeaderCell>\r\n                            <Table.HeaderCell>Update</Table.HeaderCell>\r\n                            <Table.HeaderCell>Delete</Table.HeaderCell>\r\n                           \r\n                        </Table.Row>\r\n                    </Table.Header>\r\n    \r\n                    <Table.Body>\r\n                    {APIData.map((data) => {\r\n                     return (\r\n                        <Table.Row>\r\n                            <Table.Cell>{data.firstName}</Table.Cell>\r\n                            <Table.Cell>{data.lastName}</Table.Cell>\r\n                            <Table.Cell>{data.checkbox ? 'Checked' : 'Unchecked'}</Table.Cell>\r\n                            <Link to='/update'> <Table.Cell><Button onClick={() => setData(data)}>Update</Button></Table.Cell></Link>\r\n                            <Table.Cell>\r\n                             <Button onClick={() => onDelete(data.id)}>Delete</Button>\r\n                            </Table.Cell>\r\n                          \r\n                        </Table.Row>\r\n                         )})}\r\n                    </Table.Body>\r\n                </Table>\r\n            </div>\r\n        \r\n    </>\r\n  )\r\n}\r\nexport default Read","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Checkbox, Form } from \"semantic-ui-react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Update = () => {\r\n  const [id, setID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setID(localStorage.getItem(\"ID\"));\r\n    setFirstName(localStorage.getItem(\"First Name\"));\r\n    setLastName(localStorage.getItem(\"Last Name\"));\r\n    setCheckbox(localStorage.getItem(\"Checkbox Value\"));\r\n  }, []);\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [checkbox, setCheckbox] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const updateAPIData = () => {\r\n    axios\r\n      .put(`https://6309eeb332499100327ddb99.mockapi.io/mydata/${id}`, {\r\n        firstName,\r\n        lastName,\r\n        checkbox\r\n      })\r\n      .then(() => {\r\n        \r\n        navigate('/read');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"create-form\">\r\n      <Form.Field>\r\n        <label>First Name</label>\r\n        <input\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Last Name</label>\r\n        <input\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Checkbox\r\n          label=\"I agree to the Terms and Conditions\"\r\n          checked={checkbox}\r\n          onChange={(e) => setCheckbox(!checkbox)}\r\n        />\r\n      </Form.Field>\r\n      <Button onClick={updateAPIData} type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\nexport default Update;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [checkbox, setCheckbox] = useState(false);\r\n  const navigate = useNavigate();\r\n  const postData = () => {\r\n    axios.post(`https://6309eeb332499100327ddb99.mockapi.io/mydata`, {\r\n    firstName,\r\n    lastName,\r\n    checkbox,\r\n  }).then(() => {\r\n    navigate('/read');\r\n  })\r\n}\r\n\r\n  return(\r\n  <Form className=\"create-form\">\r\n    <Form.Field>\r\n      <label>First Name</label>\r\n      <input placeholder='First Name' \r\n      onChange={(e) => setFirstName(e.target.value)}/>\r\n    </Form.Field>\r\n    <Form.Field>\r\n      <label>Last Name</label>\r\n      <input placeholder='Last Name' \r\n      onChange={(e) => setLastName(e.target.value)}/>\r\n    </Form.Field>\r\n    <Form.Field>\r\n    <Checkbox label='I agree to the Terms and Conditions' \r\n    onChange={(e) => setCheckbox(!checkbox)}/>\r\n    </Form.Field>\r\n    <Button onClick={postData} type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n}\r\n\r\nexport default Create","\nimport \"./styles.css\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Read from \"./components/read\";\nimport Update from \"./components/update\";\nimport Create from \"./components/create\";\n\n\nexport default function App() {\n  return (\n     <div className=\"main\"> \n     \n      \n      <h1 className=\"main-header\">react crud operations</h1>\n    <BrowserRouter>\n    <Routes history={history}>\n   \n     \n      {/* <div> */}\n      <Route exact path='/create' element={<Create />} />\n      {/* </div> */}\n      {/* <div style={{ marginTop: 20 }}> */}\n          <Route exact path='/read' element={<Read />} />\n        {/* </div> */}\n\n        <Route path='/update' element={<Update />} />\n    \n   \n    </Routes>\n    </BrowserRouter>\n     </div> \n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n\n    <App />,\n    // document.getElementById(\"root\")\n  \n);\n"],"sourceRoot":""}